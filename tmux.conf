# Set an environment variable with the Tmux version we're running
# we'll need this so we can test it and work around various breakage
# if we're running more recent versions of tmux.conf against older
# versions of Tmux
run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | cut -c 6- | sed 's/[A-Za-z]*//g')"

# Terminal type
set -g default-terminal "screen-256color"

# To get a list of all the supported colors in a given terminal (and use in tmux) do:
#    for i in {0..255} ; do printf "\x1b[38;5;${i}mcolour${i}\n"; done

# (from http://stackoverflow.com/questions/8645053/how-do-i-start-tmux-with-my-current-environment)
# You should configure the tmux session option update-environment to include the variables you want to be updated when creating new sessions. The default value includes several common X11 and SSH variables:
#    DISPLAY SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY
# To add your variables, use the set-option tmux command with its -g and -a flags (append to the existing “global” (default) value). In your ~/.tmux.conf:
#    set-option -ga update-environment ' YOUR_VAR'
# Be sure to include the leading space so that your variable name is separated from the trailing name in the default value.
set -g update-environment -r

# Mouse controls supersede the native window controls, so use shift if you want to select text outside of tmux's copy mode
#setw -g mode-mouse on
#set -g mouse-select-pane on
#set -g mouse-select-window on
#set -g mouse-resize-pane on

# Scrollback history
set -g history-limit 10000

# Lower escape timing for quicker response to scroll-buffer access (default is 500ms I think)
set -s escape-time 100

# Start window numbering at 1 (Only affects window numbering, not panes)
set -g base-index 1

# UTF8 is autodetected in 2.2 onwards, but errors if explicitly set
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.2" | bc)" = 1 ]' \
  "set -g utf8 on; \
   set -g status-utf8 on; \
   set -g mouse-utf8 on"

# Status Bar
# Default FG and BG colors
set -g status-bg default
#set -g status-fg colour8 # Gray
set -g status-fg colour10 # If we're using solarized, gray won't work, so comment the one above and use this one
# Left and right status bars, see 'man tmux' section FORMAT for other options
set -g status-left-length 16
set -g status-left '#[fg=cyan]#S'
set -g status-right '#{?pane_synchronized,#[fg=yellow][synced],''} #[fg=cyan]#H / %Y-%m-%d %H:%M '
set -g status-justify centre

# Set the active window colors on the status bar and pane border colours
# The syntax is different depending on the tmux version
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.9" | bc)" = 1 ]' \
  "set-window-option -g window-status-current-bg cyan; \
   set-window-option -g window-status-current-fg black; \
   set-option -g pane-active-border-bg default; \
   set-option -g pane-active-border-fg cyan"

if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.9" | bc)" = 1 ]' \
  "set-window-option -g window-status-current-style bg=cyan,fg=black; \
   set-option -g pane-active-border-style bg=default,fg=cyan"

# Key bindings
setw -g mode-keys vi
if-shell -b '[ "$(echo "$TMUX_VERSION > 2.4" | bc)" = 1 ]' \
    "bind-key | split-window -h -c '#{pane_current_path}'; \
     bind-key - split-window -v -c '#{pane_current_path}'; \
     bind-key c new-window      -c '#{pane_current_path}'" \
    "bind-key | split-window -h; \
     bind-key - split-window -v; \
     bind-key c new-window"
bind-key y set-window-option synchronize-panes

# Change the prefix from C-b to C-a (C-b is already used by vim)
#unbind C-b # If we want to use C-b for vim we have to unbind it from tmux first
set -g prefix C-a # Original C-b

# Customize window movement
bind-key a last-window # Original l

## Window/pane movement
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+

# Tell tmux to use xterm sequences for, e.g., ctrl-arrow
#setw -g xterm-keys on

# Force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf

# Quick pane cycling (C-a + a (without releasing C) will switch to the next pane)
#unbind ^A
#bind ^A select-pane -t :.+

# Window activity monitoring
setw -g monitor-activity on # Highlight the window where activity took place
set  -g visual-activity off # Disable the annoying text activity notification

# Don't close windows/panes on exit, configure keys to respawn and kill panes
#setw -g remain-on-exit # Set window property (global) remain on exit; respawn manually if command exits
bind C-r respawn-pane
bind C-x kill-pane
#bind C-x confirm-before -p "kill-pane #P? (y/n)" kill-pane # Kill pane, but ask for confirmation first
#bind R respawn-window

# Change the copy/paste keybinds to more sane vim-like defaults
unbind [
bind Escape copy-mode    # Escape enters copy mode
unbind p                 # p pastes, overrides the 'previous window' keybind
bind p paste-buffer
# Recent versions of Tmux changed the keybinding syntax https://github.com/tmux/tmux/issues/754
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.4" | bc)" = 1 ]' \
    "bind-key -T copy-mode-vi 'v' send-keys -X begin-selection; \
     bind-key -T copy-mode-vi 'y' send-keys -X copy-selection" \
    "bind-key -t vi-copy 'v' begin-selection; \
     bind-key -t vi-copy 'y' copy-selection"

# Pane movement
bind-key m command-prompt -p "send pane to:"  "join-pane -t '%%'"

# Disable auto renaming of windows
set -g allow-rename off

# dsmadmc expects Home as "\e[H" and End as "\e[F"
# we also need to force "beginning-of-line" and "end-of-line" in ~/.zshrc
bind-key -n home send-key "C-[" "[H"
bind-key -n end  send-key "C-[" "[F"

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'

# tmux-continuum (https://github.com/tmux-plugins/tmux-continuum)
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-boot    'on'
set -g @continuum-restore 'on'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
